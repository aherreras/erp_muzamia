/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package erp_muzamia.ui;

import erp_muzamia.dao.DaoClientes;
import erp_muzamia.dao.impl.DaoClientesImpl;
import erp_muzamia.dto.Clientes;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class MantClienteUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form MantCliente
     */
    public MantClienteUI() {
        initComponents();
        listarColumnasTabla();
        listarClientes();
        inicializarDatos();
    }
    
    
    Integer accion = 0;

    public void listarColumnasTabla() {
        jtClientes.getColumnModel().getColumn(0).setMaxWidth(50);
        jtClientes.getColumnModel().getColumn(0).setMinWidth(50);
        jtClientes.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(50);
        jtClientes.getTableHeader().getColumnModel().getColumn(0).setMinWidth(50);

        jtClientes.getColumnModel().getColumn(1).setMaxWidth(130);
        jtClientes.getColumnModel().getColumn(1).setMinWidth(130);
        jtClientes.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(130);
        jtClientes.getTableHeader().getColumnModel().getColumn(1).setMinWidth(130);

        jtClientes.getColumnModel().getColumn(2).setMaxWidth(130);
        jtClientes.getColumnModel().getColumn(2).setMinWidth(130);
        jtClientes.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(130);
        jtClientes.getTableHeader().getColumnModel().getColumn(2).setMinWidth(130);

        jtClientes.getColumnModel().getColumn(3).setMaxWidth(80);
        jtClientes.getColumnModel().getColumn(3).setMinWidth(80);
        jtClientes.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(80);
        jtClientes.getTableHeader().getColumnModel().getColumn(3).setMinWidth(80);
        
        jtClientes.getColumnModel().getColumn(5).setMaxWidth(150);
        jtClientes.getColumnModel().getColumn(5).setMinWidth(150);
        jtClientes.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(150);
        jtClientes.getTableHeader().getColumnModel().getColumn(5).setMinWidth(150);
    }

    public void listarClientes() {
        DaoClientes daoClientes = new DaoClientesImpl();
        List<Clientes> list = daoClientes.lst_Clientes_2();

        DefaultTableModel model = (DefaultTableModel) jtClientes.getModel();
        model.setRowCount(0);

        Object[] row;

        for (int i = 0; i < list.size(); i++) {
            row = new Object[6];
            row[0] = list.get(i).getClie_id();
            row[1] = list.get(i).getClie_nombres();
            row[2] = list.get(i).getClie_apellidos();
            row[3] = list.get(i).getClie_dni();

            boolean estado = list.get(i).isClie_estado();

            if (estado == true) {
                row[4] = "Activo";
            } else {
                row[4] = "Inactivo";
            }

            row[5] = list.get(i).getClie_timestamp();

            model.addRow(row);
        };
    }

    public void inicializarDatos() {
        limpiar_Datos();

        jtfNomClie.setEnabled(false);
        jtfApeClie.setEnabled(false);
        jtfDNI.setEnabled(false);
        jcbEstado.setEnabled(false);

// Botones laterales
        jbNuevo.setEnabled(true);
        jbLimpiar.setEnabled(false);
        jbGuardar.setEnabled(false);
        jbModificar.setEnabled(false);
        jbEliminar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtfClieID = new javax.swing.JTextField();
        jtfNomClie = new javax.swing.JTextField();
        jtfApeClie = new javax.swing.JTextField();
        jtfDNI = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jbLimpiar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtClientes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("MANTENIMIENTO DE CLIENTES");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Cliente"));

        jLabel11.setText("Apellidos:");
        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Nombres:");
        jLabel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setText("Doc. Identidad:");
        jLabel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel14.setText("ID:");
        jLabel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtfClieID.setEnabled(false);

        jLabel13.setText("Estado:");
        jLabel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfClieID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNomClie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfApeClie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jcbEstado, javax.swing.GroupLayout.Alignment.LEADING, 0, 134, Short.MAX_VALUE)
                        .addComponent(jtfDNI, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfClieID, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfNomClie, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfApeClie, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfDNI, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Botones de acción"));

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jbNuevo)
                .addGap(10, 10, 10)
                .addComponent(jbLimpiar)
                .addGap(10, 10, 10)
                .addComponent(jbModificar)
                .addGap(10, 10, 10)
                .addComponent(jbGuardar)
                .addGap(10, 10, 10)
                .addComponent(jbEliminar)
                .addGap(7, 7, 7))
        );

        jtClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombres", "Apellidos", "DNI", "Estado", "F. Ult. Mod."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtClientesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        limpiar_Datos();

        jbNuevo.setEnabled(true);
        jbLimpiar.setEnabled(true);
        jbModificar.setEnabled(false);
        jbGuardar.setEnabled(true);
        jbEliminar.setEnabled(false);
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        accion = 0;

        limpiar_Datos();
        habilita_Campos(true);

        jbNuevo.setEnabled(false);
        jbLimpiar.setEnabled(true);
        jbModificar.setEnabled(false);
        jbGuardar.setEnabled(true);
        jbEliminar.setEnabled(false);

        jtfNomClie.requestFocusInWindow();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        accion = 1;

        habilita_Campos(true);

        jbNuevo.setEnabled(true);
        jbLimpiar.setEnabled(false);
        jbModificar.setEnabled(false);
        jbGuardar.setEnabled(true);
        jbEliminar.setEnabled(false);
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        String message = null;
        int estado = jcbEstado.getSelectedIndex();

        if (jtfNomClie.getText().isEmpty()) {
            if (message == null) {
                message = "Validación de campos:\n";
            }
            message += "\n* Ingresar nombres.";
        }

        if (jtfApeClie.getText().isEmpty()) {
            if (message == null) {
                message = "Validación de campos:\n";
            }
            message += "\n* Ingresar apellidos.";
        }

        if (message != null) {
            JOptionPane.showMessageDialog(null, message, "Alerta", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Clientes cl = new Clientes();

        cl.setClie_nombres(jtfNomClie.getText());
        cl.setClie_apellidos(jtfApeClie.getText());
        if (!jtfDNI.getText().isEmpty()) {
            cl.setClie_dni(Integer.parseInt(jtfDNI.getText()));
        }

        if (estado == 0) {
            cl.setClie_estado(true);
        } else {
            cl.setClie_estado(false);
        }

        DaoClientes daoClientes = new DaoClientesImpl();

        if (accion == 0) {
            message = daoClientes.ins_Clientes(cl);
        } else {
            cl.setClie_id(Integer.parseInt(jtfClieID.getText()));
            message = daoClientes.upd_Clientes(cl);
        }

        if (message == null) {
            String cad = "";
            if (accion == 0) {
                cad = "registrado";
            } else {
                cad = "actualizado";
            }
            JOptionPane.showMessageDialog(null, "Cliente " + cad + " satisfactoriamente.", "En hora buena!", JOptionPane.INFORMATION_MESSAGE);
            inicializarDatos();
        } else {
            JOptionPane.showMessageDialog(null, message, "En hora buena!", JOptionPane.INFORMATION_MESSAGE);
        }

        listarClientes();
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtClientesMouseClicked
        int row = jtClientes.getSelectedRow();

        jtfClieID.setText(jtClientes.getValueAt(row, 0).toString());
        jtfNomClie.setText(jtClientes.getValueAt(row, 1).toString());
        jtfApeClie.setText(jtClientes.getValueAt(row, 2).toString());
        jtfDNI.setText(jtClientes.getValueAt(row, 3).toString());

        String estado = jtClientes.getValueAt(row, 4).toString();

        if (estado == "Activo") {
            jcbEstado.setSelectedIndex(0);
        } else {
            jcbEstado.setSelectedIndex(1);
        }

        habilita_Campos(false);

        jbNuevo.setEnabled(true);
        jbLimpiar.setEnabled(false);
        jbModificar.setEnabled(true);
        jbGuardar.setEnabled(false);
        jbEliminar.setEnabled(true);
    }//GEN-LAST:event_jtClientesMouseClicked

    private void jtClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtClientesMousePressed

    }//GEN-LAST:event_jtClientesMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JTable jtClientes;
    private javax.swing.JTextField jtfApeClie;
    private javax.swing.JTextField jtfClieID;
    private javax.swing.JTextField jtfDNI;
    private javax.swing.JTextField jtfNomClie;
    // End of variables declaration//GEN-END:variables

    public void limpiar_Datos() {
        jtfClieID.setText("");
        jtfNomClie.setText("");
        jtfApeClie.setText("");
        jtfDNI.setText("");
        jcbEstado.setSelectedIndex(0);
    }

    public void habilita_Campos(boolean estado) {
        jtfNomClie.setEnabled(estado);
        jtfApeClie.setEnabled(estado);
        jtfDNI.setEnabled(estado);
        jcbEstado.setEnabled(estado);
    }
}
